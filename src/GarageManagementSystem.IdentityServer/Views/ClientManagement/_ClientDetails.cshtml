@model dynamic

<div class="row">
    <div class="col-md-6">
        <h6><strong>Basic Information</strong></h6>
        <table class="table table-sm">
            <tr>
                <td><strong>Client ID:</strong></td>
                <td>@Model.ClientId</td>
            </tr>
            <tr>
                <td><strong>Client Name:</strong></td>
                <td>@Model.ClientName</td>
            </tr>
            <tr>
                <td><strong>Description:</strong></td>
                <td>@(Model.Description ?? "N/A")</td>
            </tr>
            <tr>
                <td><strong>Enabled:</strong></td>
                <td>
                    @if (Model.Enabled)
                    {
                        <span class="badge badge-success">Yes</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">No</span>
                    }
                </td>
            </tr>
            <tr>
                <td><strong>Created:</strong></td>
                <td>@Model.Created.ToString("yyyy-MM-dd HH:mm")</td>
            </tr>
        </table>
    </div>
    <div class="col-md-6">
        <h6><strong>Security Settings</strong></h6>
        <table class="table table-sm">
            <tr>
                <td><strong>Require Client Secret:</strong></td>
                <td>
                    @if (Model.RequireClientSecret)
                    {
                        <span class="badge badge-success">Yes</span>
                    }
                    else
                    {
                        <span class="badge badge-warning">No</span>
                    }
                </td>
            </tr>
            <tr>
                <td><strong>Require PKCE:</strong></td>
                <td>
                    @if (Model.RequirePkce)
                    {
                        <span class="badge badge-success">Yes</span>
                    }
                    else
                    {
                        <span class="badge badge-warning">No</span>
                    }
                </td>
            </tr>
            <tr>
                <td><strong>Allow Offline Access:</strong></td>
                <td>
                    @if (Model.AllowOfflineAccess)
                    {
                        <span class="badge badge-success">Yes</span>
                    }
                    else
                    {
                        <span class="badge badge-secondary">No</span>
                    }
                </td>
            </tr>
            <tr>
                <td><strong>Require Consent:</strong></td>
                <td>
                    @if (Model.RequireConsent)
                    {
                        <span class="badge badge-warning">Yes</span>
                    }
                    else
                    {
                        <span class="badge badge-success">No</span>
                    }
                </td>
            </tr>
            <tr>
                <td><strong>Allow Remember Consent:</strong></td>
                <td>
                    @if (Model.AllowRememberConsent)
                    {
                        <span class="badge badge-success">Yes</span>
                    }
                    else
                    {
                        <span class="badge badge-secondary">No</span>
                    }
                </td>
            </tr>
        </table>
    </div>
</div>

<div class="row mt-3">
    <div class="col-md-6">
        <h6><strong>Grant Types</strong></h6>
        <div>
            @if (Model.GrantTypes.Count > 0)
            {
                @foreach (var grantType in Model.GrantTypes)
                {
                    <span class="badge badge-info mr-1">@grantType</span>
                }
            }
            else
            {
                <span class="text-muted">None</span>
            }
        </div>
    </div>
    <div class="col-md-6">
        <h6><strong>Allowed Scopes</strong></h6>
        <div>
            @if (Model.Scopes.Count > 0)
            {
                @foreach (var scope in Model.Scopes)
                {
                    <span class="badge badge-success mr-1">@scope</span>
                }
            }
            else
            {
                <span class="text-muted">None</span>
            }
        </div>
    </div>
</div>

<div class="row mt-3">
    <div class="col-md-6">
        <h6><strong>Redirect URIs</strong></h6>
        <div>
            @if (Model.RedirectUris.Count > 0)
            {
                <ul class="list-unstyled">
                    @foreach (var uri in Model.RedirectUris)
                    {
                        <li><code>@uri</code></li>
                    }
                </ul>
            }
            else
            {
                <span class="text-muted">None</span>
            }
        </div>
    </div>
    <div class="col-md-6">
        <h6><strong>Post Logout Redirect URIs</strong></h6>
        <div>
            @if (Model.PostLogoutRedirectUris.Count > 0)
            {
                <ul class="list-unstyled">
                    @foreach (var uri in Model.PostLogoutRedirectUris)
                    {
                        <li><code>@uri</code></li>
                    }
                </ul>
            }
            else
            {
                <span class="text-muted">None</span>
            }
        </div>
    </div>
</div>

<div class="row mt-3">
    <div class="col-md-6">
        <h6><strong>Token Lifetimes</strong></h6>
        <table class="table table-sm">
            <tr>
                <td><strong>Access Token:</strong></td>
                <td>@Model.AccessTokenLifetime seconds</td>
            </tr>
            <tr>
                <td><strong>Identity Token:</strong></td>
                <td>@Model.IdentityTokenLifetime seconds</td>
            </tr>
            <tr>
                <td><strong>Authorization Code:</strong></td>
                <td>@Model.AuthorizationCodeLifetime seconds</td>
            </tr>
            <tr>
                <td><strong>User SSO:</strong></td>
                <td>@Model.UserSsoLifetime seconds</td>
            </tr>
            @if (Model.ConsentLifetime.HasValue)
            {
                <tr>
                    <td><strong>Consent:</strong></td>
                    <td>@Model.ConsentLifetime seconds</td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-6">
        <h6><strong>Advanced Settings</strong></h6>
        <table class="table table-sm">
            <tr>
                <td><strong>Device Flow:</strong></td>
                <td>
                    @if (Model.AllowDeviceFlow)
                    {
                        <span class="badge badge-success">Enabled</span>
                        <br><small>Device Code Lifetime: @Model.DeviceCodeLifetime seconds</small>
                    }
                    else
                    {
                        <span class="badge badge-secondary">Disabled</span>
                    }
                </td>
            </tr>
            <tr>
                <td><strong>Request Object:</strong></td>
                <td>
                    @if (Model.RequireRequestObject)
                    {
                        <span class="badge badge-warning">Required</span>
                    }
                    else
                    {
                        <span class="badge badge-success">Optional</span>
                    }
                </td>
            </tr>
        </table>
    </div>
</div>

<div class="row mt-3">
    <div class="col-md-6">
        <h6><strong>CORS Origins</strong></h6>
        <div>
            @if (Model.CorsOrigins != null && Model.CorsOrigins.Count > 0)
            {
                <ul class="list-unstyled">
                    @foreach (var origin in Model.CorsOrigins)
                    {
                        <li><code>@origin</code></li>
                    }
                </ul>
            }
            else
            {
                <span class="text-muted">None</span>
            }
        </div>
    </div>
    <div class="col-md-6">
        <h6><strong>Logout URIs</strong></h6>
        <div>
            @if (!string.IsNullOrEmpty(Model.FrontChannelLogoutUri))
            {
                <div class="mb-2">
                    <strong>Front Channel:</strong><br>
                    <code>@Model.FrontChannelLogoutUri</code>
                    @if (Model.FrontChannelLogoutSessionRequired)
                    {
                        <span class="badge badge-info ml-1">Session Required</span>
                    }
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.BackChannelLogoutUri))
            {
                <div>
                    <strong>Back Channel:</strong><br>
                    <code>@Model.BackChannelLogoutUri</code>
                    @if (Model.BackChannelLogoutSessionRequired)
                    {
                        <span class="badge badge-info ml-1">Session Required</span>
                    }
                </div>
            }
            @if (string.IsNullOrEmpty(Model.FrontChannelLogoutUri) && string.IsNullOrEmpty(Model.BackChannelLogoutUri))
            {
                <span class="text-muted">None</span>
            }
        </div>
    </div>
</div>
