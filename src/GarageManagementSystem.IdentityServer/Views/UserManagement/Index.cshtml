@{
    ViewData["Title"] = "User Management";
}

@Html.AntiForgeryToken()

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Users</h3>
        <div class="card-tools">
            <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#createUserModal">
                <i class="fas fa-plus"></i> Add New User
            </button>
        </div>
    </div>
    <div class="card-body">
        <table id="usersTable" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Email</th>
                    <th>Name</th>
                    <th>Roles</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>

<!-- View User Modal -->
<div class="modal fade" id="viewUserModal" tabindex="-1" role="dialog" aria-labelledby="viewUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewUserModalLabel">User Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="viewUserContent">
                <!-- Content will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade modal-with-select2" id="editUserModal" tabindex="-1" role="dialog" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="editUserForm">
                <div class="modal-body" id="editUserContent">
                    <!-- Content will be loaded here -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update User</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Create User Modal -->
<div class="modal fade modal-with-select2" id="createUserModal" tabindex="-1" role="dialog" aria-labelledby="createUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createUserModalLabel">Create New User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="createUserForm">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="createEmail">Email</label>
                                <input type="email" class="form-control" id="createEmail" name="Email" required>
                            </div>
                            <div class="form-group">
                                <label for="createFirstName">First Name</label>
                                <input type="text" class="form-control" id="createFirstName" name="FirstName">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="createPassword">Password</label>
                                <input type="password" class="form-control" id="createPassword" name="Password" required>
                            </div>
                            <div class="form-group">
                                <label for="createLastName">Last Name</label>
                                <input type="text" class="form-control" id="createLastName" name="LastName">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="createRoles">Roles</label>
                                <select class="form-control select2" id="createRoles" name="Roles" multiple>
                                    <option value="SuperAdmin">Super Admin</option>
                                    <option value="Admin">Admin</option>
                                    <option value="Manager">Manager</option>
                                    <option value="Technician">Technician</option>
                                    <option value="Receptionist">Receptionist</option>
                                    <option value="Employee">Employee</option>
                                    <option value="Customer">Customer</option>
                                    <option value="DemoUser">Demo User</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" id="createIsActive" name="IsActive" checked>
                                    <label class="form-check-label" for="createIsActive">Active</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create User</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize Select2 for main page (outside modals)
            $('.select2:not(.modal .select2)').select2({
                width: '100%',
                placeholder: 'Select options...',
                allowClear: true
            });

            var table = $('#usersTable').DataTable({
                "ajax": {
                    "url": "/UserManagement/GetUsers",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "email" },
                    { "data": "fullName" },
                    {
                        "data": "roles",
                        "render": function (data) {
                            return data.map(role => `<span class="badge badge-info">${role}</span>`).join(' ');
                        }
                    },
                    {
                        "data": "isActive",
                        "render": function (data) {
                            return data ? '<span class="badge badge-success">Active</span>' : '<span class="badge badge-danger">Inactive</span>';
                        }
                    },
                    {
                        "data": "id",
                        "render": function (data, type, row) {
                            return `<button class="btn btn-info btn-sm view-btn" data-id="${data}"><i class="fas fa-eye"></i></button>
                                    <button class="btn btn-warning btn-sm edit-btn" data-id="${data}"><i class="fas fa-edit"></i></button>
                                    <button class="btn btn-danger btn-sm delete-btn" data-id="${data}"><i class="fas fa-trash"></i></button>`;
                        },
                        "orderable": false,
                        "searchable": false
                    }
                ]
            });

            // Modal Select2 management is handled automatically by modal-select2.js

            // Handle Create User Form Submission
            $('#createUserForm').on('submit', function (e) {
                e.preventDefault();
                var formData = $(this).serializeArray();
                var data = {};
                
                // Process form data
                $.each(formData, function(i, field) {
                    if (field.name === 'Roles') {
                        if (!data[field.name]) {
                            data[field.name] = [];
                        }
                        data[field.name].push(field.value);
                    } else {
                        data[field.name] = field.value;
                    }
                });

                $.ajax({
                    url: '/UserManagement/Create',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#createUserModal').modal('hide');
                            // Show success toast
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'success',
                                title: response.message,
                                showConfirmButton: false,
                                timer: 3000
                            });
                            table.ajax.reload();
                            $('#createUserForm')[0].reset();
                        } else {
                            // Show error toast
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'error',
                                title: response.message,
                                text: response.errors ? response.errors.join(', ') : '',
                                showConfirmButton: false,
                                timer: 5000
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        // Show error toast
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: 'An error occurred',
                            text: error,
                            showConfirmButton: false,
                            timer: 5000
                        });
                    }
                });
            });

            // Handle View User
            $('#usersTable').on('click', '.view-btn', function () {
                var id = $(this).data('id');
                $.ajax({
                    url: '/UserManagement/Details/' + id,
                    type: 'GET',
                    success: function (response) {
                        $('#viewUserContent').html(response);
                        $('#viewUserModal').modal('show');
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: 'Error loading user details',
                            text: error,
                            showConfirmButton: false,
                            timer: 5000
                        });
                    }
                });
            });

            // Handle Edit User
            $('#usersTable').on('click', '.edit-btn', function () {
                var id = $(this).data('id');
                $.ajax({
                    url: '/UserManagement/Edit/' + id,
                    type: 'GET',
                    success: function (response) {
                        $('#editUserContent').html(response);
                        
                        // Show modal - Select2 will be initialized automatically
                        $('#editUserModal').modal('show');
                        
                        // Set selected values after modal is shown
                        $('#editUserModal').on('shown.bs.modal', function () {
                            setTimeout(function() {
                                // Set selected values for Roles
                                var roles = $('#editRoles').data('selected-values');
                                if (roles) {
                                    $('#editRoles').val(roles).trigger('change');
                                }
                            }, 100);
                        });
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: 'Error loading user for edit',
                            text: error,
                            showConfirmButton: false,
                            timer: 5000
                        });
                    }
                });
            });

            // Handle Delete User
            $('#usersTable').on('click', '.delete-btn', function () {
                var id = $(this).data('id');
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/UserManagement/Delete/' + id,
                            type: 'POST',
                            headers: {
                                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                            },
                            success: function (response) {
                                if (response.success) {
                                    // Show success toast
                                    Swal.fire({
                                        toast: true,
                                        position: 'top-end',
                                        icon: 'success',
                                        title: response.message,
                                        showConfirmButton: false,
                                        timer: 3000
                                    });
                                    table.ajax.reload();
                                } else {
                                    // Show error toast
                                    Swal.fire({
                                        toast: true,
                                        position: 'top-end',
                                        icon: 'error',
                                        title: response.message,
                                        showConfirmButton: false,
                                        timer: 5000
                                    });
                                }
                            },
                            error: function (xhr, status, error) {
                                // Show error toast
                                Swal.fire({
                                    toast: true,
                                    position: 'top-end',
                                    icon: 'error',
                                    title: 'An error occurred',
                                    text: error,
                                    showConfirmButton: false,
                                    timer: 5000
                                });
                            }
                        });
                    }
                });
            });
        });
    </script>
}