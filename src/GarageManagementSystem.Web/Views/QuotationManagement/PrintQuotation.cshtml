@model GarageManagementSystem.Web.Models.PrintQuotationViewModel

@{
    ViewData["Title"] = "In Báo Giá";
    Layout = null; // Không sử dụng layout chính
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - @Model.Quotation.QuotationNumber</title>
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Times New Roman', serif;
            font-size: 12px;
            line-height: 1.4;
            color: #000;
            background: #fff;
        }
        
        
        .print-container {
            width: 210mm;
            min-height: 297mm;
            margin: 0;
            padding: 3mm 3mm;
            background: white;
            page-break-inside: avoid;
        }
        
        /* Header Section */
        .header {
            display: flex;
            align-items: flex-start;
        }
        
        .logo-section {
            flex: 0 0 100px;
            margin-right: 15px;
        }
        
        .logo {
            width: 80px;
            height: 80px;
            border: 2px solid #333;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #ff6b35;
            color: white;
            font-weight: bold;
            font-size: 9px;
            text-align: center;
            line-height: 1.2;
        }
        
        .company-info {
            flex: 1;
        }
        
        .company-name {
            font-size: 26px;
            font-weight: bold;
            color: #333;
            text-transform: uppercase;
        }
        
        .company-details {
            font-size: 12px;
            line-height: 1.6;
        }
        
        .company-details .detail-row {
            margin-bottom: 3px;
        }
        
        .company-details strong {
            font-weight: bold;
        }
        
        /* Document Title */
        .document-title {
            text-align: center;
            font-size: 16px;
            font-weight: bold;
            color: #333;
            margin: 10px 0;
            text-transform: uppercase;
            border: 2px solid #333;
            padding: 8px;
            background: #f8f9fa;
        }
        
        /* Quotation Details */
        .quotation-details {
            display: flex;
            gap: 15px;
        }
        
        .detail-table {
            flex: 1;
            border: 1px solid #333;
            border-collapse: collapse;
        }
        
        .detail-table th,
        .detail-table td {
            border: 1px solid #333;
            padding: 2px;
            text-align: left;
            vertical-align: middle;
            min-height: 18px;
        }
        
        .detail-table td.editable {
            border: 1px solid #333 !important;
            min-height: 20px;
            background: #fff;
        }
        
        .detail-table td:empty {
            border: 1px solid #333 !important;
            min-height: 20px;
            background: #fff;
        }
        
        .detail-table th {
            background: #f8f9fa;
            font-weight: bold;
            width: 30%;
        }
        
        /* Introduction */
        .introduction {
            text-align: justify;
            padding: 15px;
            background: #f8f9fa;
            border-left: 4px solid #ff6b35;
        }
        
        .section-title {
            font-size: 12px;
            font-weight: bold;
            color: #333;
            margin-bottom: 8px;
            text-transform: uppercase;
            border-bottom: 2px solid #333;
            padding-bottom: 3px;
        }
        
        .service-table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .service-table th,
        .service-table td {
            border: 1px solid #333;
            padding: 2px;
            text-align: center;
            vertical-align: middle;
        }
        
        .service-table th {
            background: #f8f9fa;
            font-weight: bold;
            font-size: 12px;
        }
        
        .service-table .item-name {
            text-align: left;
            padding-left: 12px;
        }
        
        .service-table .number {
            width: 5%;
        }
        
        .service-table .name {
            width: 35%;
        }
        
        .service-table .unit {
            width: 10%;
        }
        
        .service-table .quantity {
            width: 10%;
        }
        
        .service-table .price {
            width: 20%;
        }
        
        .service-table .total {
            width: 20%;
        }
        
        .subtotal-row {
            background: #f8f9fa;
            font-weight: bold;
        }
        
        .grand-total-row {
            background: #ffeb3b !important;
            font-weight: bold;
            font-size: 14px;
        }
        
        /* Total Section */
        .total-section {
            margin: 20px 0;
            text-align: right;
        }
        
        .total-table {
            display: inline-block;
            border: 2px solid #333;
            min-width: 300px;
        }
        
        .total-table th,
        .total-table td {
            border: 1px solid #333;
            padding: 10px 15px;
            text-align: left;
        }
        
        .total-table th {
            background: #f8f9fa;
            font-weight: bold;
            width: 60%;
        }
        
        .total-table .amount {
            text-align: right;
            font-weight: bold;
            font-size: 14px;
        }
        
        .total-table .amount-words {
            font-style: italic;
            font-size: 12px;
        }
        
        /* Notes Section */
        .notes-section {
            margin: 3px 0;
        }
        
        .notes-title {
            font-weight: bold;
            text-transform: uppercase;
            font-size: 12px;
        }
        
        .notes-content {
            font-size: 12px;
            line-height: 1.5;
        }
        
        .notes-content .note-item {
            margin-bottom: 5px;
            padding-left: 10px;
            position: relative;
        }
        
        .notes-content .note-item::before {
            content: "-";
            position: absolute;
            left: 0;
        }
        
        /* Signature Section */
        .signature-section {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }
        
        .signature-box {
            text-align: center;
            width: 200px;
        }
        
        .signature-title {
            font-weight: bold;
            margin-bottom: 30px;
            text-transform: uppercase;
            font-size: 12px;
        }
        
        .signature-line {
            border-bottom: 1px solid #333;
            height: 30px;
        }
        
        /* Print Styles */
        @@media print {
            * {
                -webkit-print-color-adjust: exact !important;
                color-adjust: exact !important;
            }
            
            body {
                font-size: 12px;
                margin: 0 !important;
                padding: 0 !important;
            }
            
            .print-container {
                margin: 0 !important;
                padding: 3mm 3mm !important;
                max-width: none !important;
                width: 210mm !important;
                min-height: 297mm !important;
                max-height: 297mm !important;
                page-break-inside: avoid !important;
                overflow: hidden !important;
            }
            
            .no-print {
                display: none !important;
            }
            
            @@page {
                size: A4;
                margin: 0;
            }
        }
        
        /* Editable Styles */
        .editable {
            border: 1px dashed #ccc;
            padding: 2px;
            min-height: 20px;
            cursor: text;
        }
        
        .editable:hover {
            border-color: #ff6b35;
            background: #fff5f0;
        }
        
        .editable:focus {
            outline: none;
            border-color: #ff6b35;
            background: #fff5f0;
        }
        
        /* Control Panel */
        .control-panel {
            position: fixed;
            top: 10px;
            right: 10px;
            background: white;
            border: 2px solid #333;
            padding: 15px;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            z-index: 1000;
        }
        
        .control-panel h4 {
            margin-bottom: 10px;
            color: #333;
        }
        
        .control-panel button {
            background: #ff6b35;
            color: white;
            border: none;
            padding: 8px 15px;
            margin: 2px;
            border-radius: 3px;
            cursor: pointer;
            font-size: 12px;
        }
        
        .control-panel button:hover {
            background: #e55a2b;
        }
        
        .control-panel .btn-secondary {
            background: #6c757d;
        }
        
        .control-panel .btn-secondary:hover {
            background: #5a6268;
        }
    </style>
</head>
<body>
    <!-- Control Panel - Temporarily hidden -->
    <!--
    <div class="control-panel no-print">
        <h4>Điều Khiển</h4>
        <button onclick="toggleEdit()">Chỉnh Sửa</button>
        <button onclick="printQuotation()">In Báo Giá</button>
        <button onclick="saveTemplate()">Lưu Mẫu</button>
        <button onclick="window.close()">Đóng</button>
    </div>
    -->

    <div class="print-container">
        <!-- Header Section -->
        <div class="header">
            <div class="logo-section">
                <img src="~/css/img/logo.png" />
            </div>
            <div class="company-info">
                <div class="company-name" contenteditable="false" id="companyName">@(Model.CompanyInfo?.CompanyName ?? "GARAGE Ô TÔ THUẬN PHÁT")</div>
                <div class="company-details">
                    <div class="detail-row"><strong>Địa chỉ:</strong> <span class="editable" contenteditable="false" id="companyAddress">@(Model.CompanyInfo?.CompanyAddress ?? "313 Võ Văn Vân, Vĩnh Lộc B, H. Bình Chánh, TP.HCM")</span></div>
                    <div class="detail-row"><strong>Điện thoại:</strong> <span class="editable" contenteditable="false" id="companyPhone">@(Model.CompanyInfo?.CompanyPhone ?? "032.7007.985 (Mr. Bằng)")</span></div>
                    <div class="detail-row"><h1>BẢNG BÁO GIÁ SỬA CHỮA XE Ô TÔ</h1></div>
                    @* <div class="detail-row"><strong>Email:</strong> <span class="editable" contenteditable="false" id="companyEmail">@(Model.CompanyInfo?.CompanyEmail ?? "garage@thuanphat.com")</span></div>
                    <div class="detail-row"><strong>Website:</strong> <span class="editable" contenteditable="false" id="companyWebsite">@(Model.CompanyInfo?.CompanyWebsite ?? "www.thuanphat.com")</span></div> *@
                </div>
            </div>
        </div>
        <!-- Quotation Details -->
        <div class="quotation-details">
            <table class="detail-table">
                <tbody>
                    <tr>
                        <td>Ngày báo giá:</td>
                        <td>@DateTime.Now.ToString("dd/MM/yyyy")</td>
                        <td>Số báo giá:</td>
                        <td>@Model.Quotation.QuotationNumber</td>
                    </tr>
                    <tr>
                        <td>Khách hàng:</td>
                        <td>@(Model.Quotation.Customer?.Name ?? "")</td>
                        <td>Biển số xe:</td>
                        <td>@(Model.Quotation.Vehicle?.LicensePlate ?? "")</td>
                    </tr>
                    <tr>
                        <td>Mã số thuế:</td>
                        <td class="editable" contenteditable="false" id="customerTaxId"></td>
                        <td>Hiệu xe:</td>
                        <td>@(Model.Quotation.Vehicle?.Brand ?? "") @(Model.Quotation.Vehicle?.Model ?? "")</td>
                    </tr>
                    <tr>
                        <td>Địa chỉ:</td>
                        <td>@(Model.Quotation.Customer?.Address ?? "")</td>
                        <td>Số khung:</td>
                        <td class="editable" contenteditable="false" id="vehicleChassis"></td>
                        
                    </tr>
                    <tr>
                        <td>Điện thoại:</td>
                        <td>@(Model.Quotation.Customer?.Phone ?? "")</td>
                        <td>Số máy:</td>
                        <td class="editable" contenteditable="false" id="vehicleEngine"></td>
                    </tr>
                    <tr>
                        <td>Email:</td>
                        <td>@(Model.Quotation.Customer?.Email ?? "")</td>
                        <td>Số KM:</td>
                        <td class="editable" contenteditable="false" id="vehicleMileage"></td>
                    </tr>
                </tbody>
            </table>
        </div>

        <!-- Introduction -->
        <div class="introduction">
            Lời đầu tiên, xin trân trọng cảm ơn quý khách hàng đã quan tâm đến dịch vụ sửa chữa của Gara chúng tôi. 
            <span class="editable" contenteditable="false" id="companyNameIntro">Garage Ô tô THUẬN PHÁT</span> 
            xin gửi đến quý khách hàng bảng báo giá sửa chữa chi tiết như sau:
        </div>

        <!-- Service Items - 3 Groups -->
        @if (Model.Quotation.Items != null && Model.Quotation.Items.Any())
        {
            var partsItems = Model.Quotation.Items.Where(i => i.ServiceType == "parts").ToList();
            var repairItems = Model.Quotation.Items.Where(i => i.ServiceType == "repair").ToList();
            var paintItems = Model.Quotation.Items.Where(i => i.ServiceType == "paint").ToList();

            <!-- 1. DANH MỤC PHỤ TÙNG -->
            <div class="service-group">
                
                <table class="service-table">
                    <thead>
                        <tr>
                            <th class="number">STT</th>
                            <th class="name">DANH MỤC PHỤ TÙNG</th>
                            <th class="unit">ĐVT</th>
                            <th class="quantity">SL</th>
                            <th class="price">ĐƠN GIÁ</th>
                            <th class="total">THÀNH TIỀN</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (partsItems.Any())
                        {
                            @for (int i = 0; i < partsItems.Count; i++)
                            {
                                var item = partsItems[i];
                                <tr>
                                    <td>@(i + 1)</td>
                                    <td class="item-name">@item.ItemName</td>
                                    <td>xe</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.UnitPrice.ToString("N0") VNĐ</td>
                                    <td>@((item.UnitPrice * item.Quantity).ToString("N0")) VNĐ</td>
                                </tr>
                            }
                            <tr class="subtotal-row">
                                <td colspan="5" class="text-right"><strong>Tổng danh mục phụ tùng (01)</strong></td>
                                <td class="text-right"><strong>@(partsItems.Sum(i => i.UnitPrice * i.Quantity).ToString("N0")) VNĐ</strong></td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                            </tr>
                            <tr class="subtotal-row">
                                <td colspan="5" class="text-right"><strong>Tổng danh mục phụ tùng (01)</strong></td>
                                <td class="text-right"><strong> - </strong></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- 2. DANH MỤC ĐỒNG SƠN -->
            <div class="service-group">
                <table class="service-table">
                    <thead>
                        <tr>
                            <th class="number">STT</th>
                            <th class="name">DANH MỤC ĐỒNG SƠN</th>
                            <th class="unit">ĐVT</th>
                            <th class="quantity">SL</th>
                            <th class="price">ĐƠN GIÁ</th>
                            <th class="total">THÀNH TIỀN</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (paintItems.Any())
                        {
                            @for (int i = 0; i < paintItems.Count; i++)
                            {
                                var item = paintItems[i];
                                <tr>
                                    <td>@(i + 1)</td>
                                    <td class="item-name">@item.ItemName</td>
                                    <td>xe</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.UnitPrice.ToString("N0") VNĐ</td>
                                    <td>@((item.UnitPrice * item.Quantity).ToString("N0")) VNĐ</td>
                                </tr>
                            }
                            <tr class="subtotal-row">
                                <td colspan="5" class="text-right"><strong>Tổng danh mục sơn (02)</strong></td>
                                <td class="text-right"><strong>@(paintItems.Sum(i => i.UnitPrice * i.Quantity).ToString("N0")) VNĐ</strong></td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                            </tr>
                            <tr class="subtotal-row">
                                <td colspan="5" class="text-right"><strong>Tổng danh mục phụ tùng (02)</strong></td>
                                <td class="text-right"><strong> - </strong></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- 3. DANH MỤC CÔNG SỬA CHỮA -->
            <div class="service-group">
                <table class="service-table">
                    <thead>
                        <tr>
                            <th class="number">STT</th>
                            <th class="name">DANH MỤC CÔNG SỬA CHỮA</th>
                            <th class="unit">ĐVT</th>
                            <th class="quantity">SL</th>
                            <th class="price">ĐƠN GIÁ</th>
                            <th class="total">THÀNH TIỀN</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (repairItems.Any())
                        {
                            @for (int i = 0; i < repairItems.Count; i++)
                            {
                                var item = repairItems[i];
                                <tr>
                                    <td>@(i + 1)</td>
                                    <td class="item-name">@item.ItemName</td>
                                    <td>xe</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.UnitPrice.ToString("N0") VNĐ</td>
                                    <td>@((item.UnitPrice * item.Quantity).ToString("N0")) VNĐ</td>
                                </tr>
                            }
                            <tr class="subtotal-row">
                                <td colspan="5" class="text-right"><strong>Tổng nhân công (03)</strong></td>
                                <td class="text-right"><strong>@(repairItems.Sum(i => i.UnitPrice * i.Quantity).ToString("N0")) VNĐ</strong></td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                            </tr>
                            <tr class="subtotal-row">
                                <td colspan="5" class="text-right"><strong>Tổng danh mục phụ tùng (03)</strong></td>
                                <td class="text-right"><strong> - </strong></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- TỔNG CỘNG TẤT CẢ -->
            <div class="grand-total-section">
                <table class="service-table">
                
                    <tbody>
                        <tr class="grand-total-row">
                            <td colspan="5" class="text-right"><strong>TỔNG CỘNG (01 + 02 + 03)</strong></td>
                            <td style="width:20%"><strong>@((Model.Quotation.Items.Sum(i => i.UnitPrice * i.Quantity)).ToString("N0")) VNĐ</strong></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }
        <!-- Notes Section -->
        <div class="notes-section">
            <div class="notes-title">GHI CHÚ: Thời hạn bảo hành phụ tùng đại tu máy thời gian bảo hành 24 tháng kể từ giao xe</div>
            <div class="notes-content">
                <div class="note-item"> Báo giá chưa bao gồm VAT %</div>
                <div class="note-item"> Báo giá chỉ có giá trị trong vòng 30 ngày kể từ ngày báo giá và không có giá trị thanh toán. Những chi phí phát sinh thêm sẽ được thông báo trước khi thực hiện.</div>
                <div class="note-item"> Thời hạn bảo hành phụ tùng vật tư chính hãng là 12 tháng hoặc 10000 km tùy theo điều kiện nào đến trước.</div>
            </div>
        </div>

        <!-- Signature Section -->
        <div class="signature-section">
            <div class="signature-box">
                <div style="margin-top: 10px;">
                    &nbsp;
                </div>
                <div class="signature-title">XÁC NHẬN CỦA KHÁCH HÀNG</div>
                <div class="signature-line"></div>
                <div style="margin-top: 5px; font-size: 12px;">Ký tên</div>
            </div>
            <div class="signature-box">
                <div style="margin-top: 10px; font-size: 11px; color: #666;">
                    <strong>Ngày in:</strong> <span id="printDate">@DateTime.Now.ToString("dd/MM/yyyy HH:mm")</span>
                </div>
                <div class="signature-title" id="companyNameSignature">GARAGE Ô TÔ THUẬN PHÁT</div>
                <div class="signature-line"></div>
                <div style="margin-top: 5px; font-size: 12px;">Ký tên</div>
                
            </div>
        </div>
    </div>

    <script>
        let isEditMode = false;
        
        function toggleEdit() {
            isEditMode = !isEditMode;
            const editableElements = document.querySelectorAll('.editable');
            editableElements.forEach(element => {
                element.contentEditable = isEditMode;
                if (isEditMode) {
                    element.style.border = '1px dashed #ff6b35';
                    element.style.background = '#fff5f0';
                } else {
                    element.style.border = '1px dashed #ccc';
                    element.style.background = 'transparent';
                }
            });
            
            // Update button text
            const button = event.target;
            button.textContent = isEditMode ? 'Kết Thúc Chỉnh Sửa' : 'Chỉnh Sửa';
        }
        
        function printQuotation() {
            window.print();
        }
        
        function saveTemplate() {
            // Lưu template vào database thay vì localStorage
            const templateData = {
                templateName: 'Mẫu Báo Giá - ' + new Date().toLocaleDateString('vi-VN'),
                templateType: 'Quotation',
                description: 'Mẫu báo giá được tạo từ trang in',
                companyInfo: JSON.stringify({
                    companyName: document.getElementById('companyName').textContent,
                    companyAddress: document.getElementById('companyAddress').textContent,
                    companyPhone: document.getElementById('companyPhone').textContent,
                    companyEmail: document.getElementById('companyEmail').textContent,
                    companyWebsite: document.getElementById('companyWebsite').textContent
                }),
                isActive: true,
                isDefault: false
            };
            
            // Gọi API để lưu template
            fetch('/api/PrintTemplates', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(templateData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Đã lưu mẫu báo giá vào database!');
                } else {
                    alert('Lỗi khi lưu mẫu: ' + (data.errorMessage || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Lỗi khi lưu mẫu: ' + error.message);
            });
        }
        
        // Không cần loadTemplate nữa vì đã load từ server-side
             // Cập nhật ngày in khi người dùng in tài liệu
        function updatePrintDate() {
            const now = new Date();
            const printDateElement = document.getElementById('printDate');
            if (printDateElement) {
                const formattedDate = now.toLocaleDateString('vi-VN') + ' ' + now.toLocaleTimeString('vi-VN', {hour: '2-digit', minute: '2-digit'});
                printDateElement.textContent = formattedDate;
            }
        }

        // Lắng nghe sự kiện beforeprint để cập nhật ngày in
        window.addEventListener('beforeprint', updatePrintDate);

        // Cập nhật ngày in khi trang được tải
        document.addEventListener('DOMContentLoaded', updatePrintDate);
    </script>
</body>
</html>

@functions {
    private string ConvertToWords(decimal amount)
    {
        // Simple number to words converter for Vietnamese
        // This is a basic implementation - you might want to use a more comprehensive library
        var number = (long)amount;
        
        if (number == 0) return "Không đồng";
        
        var units = new[] { "", "nghìn", "triệu", "tỷ", "nghìn tỷ" };
        var ones = new[] { "", "một", "hai", "ba", "bốn", "năm", "sáu", "bảy", "tám", "chín", "mười", "mười một", "mười hai", "mười ba", "mười bốn", "mười lăm", "mười sáu", "mười bảy", "mười tám", "mười chín" };
        var tens = new[] { "", "", "hai mươi", "ba mươi", "bốn mươi", "năm mươi", "sáu mươi", "bảy mươi", "tám mươi", "chín mươi" };
        
        var result = "";
        var unitIndex = 0;
        
        while (number > 0)
        {
            var chunk = number % 1000;
            if (chunk != 0)
            {
                var chunkWords = ConvertChunk(chunk, ones, tens);
                if (unitIndex > 0)
                {
                    chunkWords += " " + units[unitIndex];
                }
                result = chunkWords + (result != "" ? " " + result : "");
            }
            number /= 1000;
            unitIndex++;
        }
        
        return char.ToUpper(result[0]) + result.Substring(1) + " đồng";
    }
    
    private string ConvertChunk(long chunk, string[] ones, string[] tens)
    {
        if (chunk == 0) return "";
        
        var result = "";
        var hundred = chunk / 100;
        var remainder = chunk % 100;
        
        if (hundred > 0)
        {
            result += ones[hundred] + " trăm";
        }
        
        if (remainder > 0)
        {
            if (hundred > 0) result += " ";
            
            if (remainder < 20)
            {
                result += ones[remainder];
            }
            else
            {
                var ten = remainder / 10;
                var one = remainder % 10;
                result += tens[ten];
                if (one > 0)
                {
                    result += " " + ones[one];
                }
            }
        }
        
        return result;
    }

   
}
