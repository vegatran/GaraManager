// <auto-generated />
using System;
using GarageManagementSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GarageManagementSystem.Infrastructure.Migrations
{
    [DbContext(typeof(GarageDbContext))]
    [Migration("20251008095822_SeedDepartmentAndPositionData")]
    partial class SeedDepartmentAndPositionData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AppointmentNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AppointmentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<string>("CancellationReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ConfirmedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimatedDuration")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("ReminderSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReminderSentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduledDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ServiceOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceRequested")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleInspectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentNumber")
                        .IsUnique()
                        .HasFilter("[AppointmentNumber] IS NOT NULL AND [IsDeleted] = 0");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceOrderId");

                    b.HasIndex("VehicleId");

                    b.HasIndex("VehicleInspectionId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AlternativePhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL AND [IsDeleted] = 0");

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL AND [IsDeleted] = 0");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1816),
                            Description = "Bộ phận dịch vụ sửa chữa và bảo dưỡng xe",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Dịch Vụ"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1818),
                            Description = "Bộ phận quản lý phụ tùng và linh kiện",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Phụ Tùng"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1819),
                            Description = "Bộ phận hành chính và quản lý",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hành Chính"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1821),
                            Description = "Bộ phận kế toán và tài chính",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kế Toán"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1822),
                            Description = "Bộ phận chăm sóc và hỗ trợ khách hàng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chăm Sóc Khách Hàng"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1823),
                            Description = "Bộ phận quản lý và điều hành",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Quản Lý"
                        });
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Skills")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1979),
                            Department = "Kỹ thuật",
                            Email = "nguyenvana@garage.com",
                            HireDate = new DateTime(2023, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1962),
                            IsDeleted = false,
                            Name = "Nguyễn Văn A",
                            Phone = "0123456789",
                            Position = "Thợ sửa chữa",
                            Salary = 8000000m,
                            Skills = "Sửa chữa động cơ, Thay dầu, Kiểm tra phanh",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1984),
                            Department = "Kỹ thuật",
                            Email = "tranthib@garage.com",
                            HireDate = new DateTime(2024, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1981),
                            IsDeleted = false,
                            Name = "Trần Thị B",
                            Phone = "0987654321",
                            Position = "Thợ lốp",
                            Salary = 7000000m,
                            Skills = "Thay lốp, Cân bằng, Sửa chữa lốp",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.InspectionIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("EstimatedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("RequiresImmediateAction")
                        .HasColumnType("bit");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SuggestedServiceId")
                        .HasColumnType("int");

                    b.Property<string>("TechnicianNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleInspectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SuggestedServiceId");

                    b.HasIndex("VehicleInspectionId");

                    b.ToTable("InspectionIssues");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.InspectionPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("InspectionIssueId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleInspectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InspectionIssueId");

                    b.HasIndex("VehicleInspectionId");

                    b.ToTable("InspectionPhotos");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompatibleVehicles")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MinimumStock")
                        .HasColumnType("int");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<int?>("ReorderLevel")
                        .HasColumnType("int");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PartNumber")
                        .IsUnique()
                        .HasFilter("[PartNumber] IS NOT NULL AND [IsDeleted] = 0");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.PaymentTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CardLastFourDigits")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CardType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRefund")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReceiptNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ReceivedById")
                        .HasColumnType("int");

                    b.Property<string>("RefundReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ServiceOrderId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionReference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptNumber")
                        .IsUnique()
                        .HasFilter("[ReceiptNumber] IS NOT NULL AND [IsDeleted] = 0");

                    b.HasIndex("ReceivedById");

                    b.HasIndex("ServiceOrderId");

                    b.ToTable("PaymentTransactions");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1919),
                            Description = "Thực hiện sửa chữa và bảo dưỡng xe",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kỹ Thuật Viên"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1921),
                            Description = "Kỹ thuật viên có kinh nghiệm cao",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kỹ Thuật Viên Cao Cấp"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1922),
                            Description = "Quản lý và tư vấn phụ tùng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chuyên Viên Phụ Tùng"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1924),
                            Description = "Tư vấn và hỗ trợ khách hàng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tư Vấn Dịch Vụ"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1925),
                            Description = "Tiếp đón và hỗ trợ khách hàng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Lễ Tân"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1926),
                            Description = "Xử lý công việc kế toán",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kế Toán"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1927),
                            Description = "Quản lý và điều hành",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Quản Lý"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1929),
                            Description = "Hỗ trợ công việc quản lý",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Trợ Lý"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1930),
                            Description = "Giám sát hoạt động sửa chữa",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Giám Sát"
                        });
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.QuotationItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("InspectionIssueId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("PartId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceQuotationId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InspectionIssueId");

                    b.HasIndex("PartId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceQuotationId");

                    b.ToTable("QuotationItems");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Bảo dưỡng",
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1576),
                            Description = "Thay dầu động cơ và lọc dầu",
                            Duration = 30,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Thay dầu động cơ",
                            Price = 200000m
                        },
                        new
                        {
                            Id = 2,
                            Category = "An toàn",
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1578),
                            Description = "Kiểm tra và bảo dưỡng hệ thống phanh",
                            Duration = 45,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kiểm tra phanh",
                            Price = 150000m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Lốp xe",
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1580),
                            Description = "Thay lốp xe và cân bằng",
                            Duration = 60,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Thay lốp",
                            Price = 300000m
                        },
                        new
                        {
                            Id = 4,
                            Category = "Sửa chữa",
                            CreatedAt = new DateTime(2025, 10, 8, 16, 58, 21, 960, DateTimeKind.Local).AddTicks(1582),
                            Description = "Chẩn đoán và sửa chữa động cơ",
                            Duration = 120,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sửa chữa động cơ",
                            Price = 500000m
                        });
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.ServiceOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountRemaining")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PartsTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PrimaryTechnicianId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ServiceQuotationId")
                        .HasColumnType("int");

                    b.Property<decimal>("ServiceTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleInspectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderNumber")
                        .IsUnique()
                        .HasFilter("[OrderNumber] IS NOT NULL AND [IsDeleted] = 0");

                    b.HasIndex("PrimaryTechnicianId");

                    b.HasIndex("ServiceQuotationId")
                        .IsUnique()
                        .HasFilter("[ServiceQuotationId] IS NOT NULL");

                    b.HasIndex("VehicleId");

                    b.HasIndex("VehicleInspectionId");

                    b.ToTable("ServiceOrders");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.ServiceOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceOrderId");

                    b.ToTable("ServiceOrderItems");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.ServiceOrderPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWarranty")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ServiceOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceOrderItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WarrantyUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("ServiceOrderId");

                    b.HasIndex("ServiceOrderItemId");

                    b.ToTable("ServiceOrderParts");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.ServiceQuotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CompanyApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyApprovalNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CompanyApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyContactPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("Deductible")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InsuranceAdjusterContact")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("InsuranceApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsuranceApprovalNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("InsuranceApprovedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTaxExempt")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaxInsuranceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PONumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentTerms")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Cash");

                    b.Property<int?>("PreparedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuotationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuotationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuotationType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Personal");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ServiceOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Terms")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleInspectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PreparedById");

                    b.HasIndex("QuotationNumber")
                        .IsUnique()
                        .HasFilter("[QuotationNumber] IS NOT NULL AND [IsDeleted] = 0");

                    b.HasIndex("VehicleId");

                    b.HasIndex("VehicleInspectionId")
                        .IsUnique()
                        .HasFilter("[VehicleInspectionId] IS NOT NULL");

                    b.ToTable("ServiceQuotations");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.StockTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessedById")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("QuantityAfter")
                        .HasColumnType("int");

                    b.Property<int>("QuantityBefore")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ServiceOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("ProcessedById");

                    b.HasIndex("ServiceOrderId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TransactionNumber")
                        .IsUnique()
                        .HasFilter("[TransactionNumber] IS NOT NULL AND [IsDeleted] = 0");

                    b.ToTable("StockTransactions");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BankName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("SupplierCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierCode")
                        .IsUnique()
                        .HasFilter("[SupplierCode] IS NOT NULL AND [IsDeleted] = 0");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdjusterName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AdjusterPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClaimNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CostCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoverageType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EngineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsuranceCompany")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PolicyNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIN")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Personal");

                    b.Property<string>("Year")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LicensePlate")
                        .IsUnique()
                        .HasFilter("[LicensePlate] IS NOT NULL AND [IsDeleted] = 0");

                    b.HasIndex("VIN")
                        .IsUnique()
                        .HasFilter("[VIN] IS NOT NULL AND [IsDeleted] = 0");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.VehicleInspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrakeCondition")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentMileage")
                        .HasColumnType("int");

                    b.Property<string>("CustomerComplaints")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineCondition")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ExteriorCondition")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FuelLevel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GeneralCondition")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InspectionNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InspectionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("InspectorId")
                        .HasColumnType("int");

                    b.Property<string>("InteriorCondition")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("QuotationId")
                        .HasColumnType("int");

                    b.Property<string>("Recommendations")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SuspensionCondition")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TechnicianNotes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TireCondition")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InspectionNumber")
                        .IsUnique()
                        .HasFilter("[InspectionNumber] IS NOT NULL AND [IsDeleted] = 0");

                    b.HasIndex("InspectorId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleInspections");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Appointment", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.Employee", "AssignedTo")
                        .WithMany("AssignedAppointments")
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Core.Entities.ServiceOrder", "ServiceOrder")
                        .WithMany()
                        .HasForeignKey("ServiceOrderId");

                    b.HasOne("GarageManagementSystem.Core.Entities.Vehicle", "Vehicle")
                        .WithMany("Appointments")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.VehicleInspection", "VehicleInspection")
                        .WithMany()
                        .HasForeignKey("VehicleInspectionId");

                    b.Navigation("AssignedTo");

                    b.Navigation("Customer");

                    b.Navigation("ServiceOrder");

                    b.Navigation("Vehicle");

                    b.Navigation("VehicleInspection");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Employee", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.Department", "DepartmentNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.Position", "PositionNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DepartmentNavigation");

                    b.Navigation("PositionNavigation");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.InspectionIssue", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.Service", "SuggestedService")
                        .WithMany("RelatedInspectionIssues")
                        .HasForeignKey("SuggestedServiceId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.VehicleInspection", "VehicleInspection")
                        .WithMany("Issues")
                        .HasForeignKey("VehicleInspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SuggestedService");

                    b.Navigation("VehicleInspection");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.InspectionPhoto", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.InspectionIssue", "InspectionIssue")
                        .WithMany()
                        .HasForeignKey("InspectionIssueId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.VehicleInspection", "VehicleInspection")
                        .WithMany("Photos")
                        .HasForeignKey("VehicleInspectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InspectionIssue");

                    b.Navigation("VehicleInspection");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.PaymentTransaction", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.Employee", "ReceivedBy")
                        .WithMany("ReceivedPayments")
                        .HasForeignKey("ReceivedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.ServiceOrder", "ServiceOrder")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("ServiceOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReceivedBy");

                    b.Navigation("ServiceOrder");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.QuotationItem", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.InspectionIssue", "InspectionIssue")
                        .WithMany()
                        .HasForeignKey("InspectionIssueId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.Part", "Part")
                        .WithMany("QuotationItems")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.Service", "Service")
                        .WithMany("QuotationItems")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.ServiceQuotation", "ServiceQuotation")
                        .WithMany("Items")
                        .HasForeignKey("ServiceQuotationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InspectionIssue");

                    b.Navigation("Part");

                    b.Navigation("Service");

                    b.Navigation("ServiceQuotation");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.ServiceOrder", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.Customer", "Customer")
                        .WithMany("ServiceOrders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Core.Entities.Employee", "PrimaryTechnician")
                        .WithMany("AssignedServiceOrders")
                        .HasForeignKey("PrimaryTechnicianId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.ServiceQuotation", "ServiceQuotation")
                        .WithOne("ServiceOrder")
                        .HasForeignKey("GarageManagementSystem.Core.Entities.ServiceOrder", "ServiceQuotationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.Vehicle", "Vehicle")
                        .WithMany("ServiceOrders")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Core.Entities.VehicleInspection", "VehicleInspection")
                        .WithMany()
                        .HasForeignKey("VehicleInspectionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Customer");

                    b.Navigation("PrimaryTechnician");

                    b.Navigation("ServiceQuotation");

                    b.Navigation("Vehicle");

                    b.Navigation("VehicleInspection");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.ServiceOrderItem", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.Service", "Service")
                        .WithMany("ServiceOrderItems")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Core.Entities.ServiceOrder", "ServiceOrder")
                        .WithMany("ServiceOrderItems")
                        .HasForeignKey("ServiceOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("ServiceOrder");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.ServiceOrderPart", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.Part", "Part")
                        .WithMany("ServiceOrderParts")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Core.Entities.ServiceOrder", "ServiceOrder")
                        .WithMany("ServiceOrderParts")
                        .HasForeignKey("ServiceOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Core.Entities.ServiceOrderItem", "ServiceOrderItem")
                        .WithMany()
                        .HasForeignKey("ServiceOrderItemId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Part");

                    b.Navigation("ServiceOrder");

                    b.Navigation("ServiceOrderItem");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.ServiceQuotation", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.Customer", "Customer")
                        .WithMany("ServiceQuotations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Core.Entities.Employee", "PreparedBy")
                        .WithMany("PreparedQuotations")
                        .HasForeignKey("PreparedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.Vehicle", "Vehicle")
                        .WithMany("Quotations")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Core.Entities.VehicleInspection", "VehicleInspection")
                        .WithOne("Quotation")
                        .HasForeignKey("GarageManagementSystem.Core.Entities.ServiceQuotation", "VehicleInspectionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Customer");

                    b.Navigation("PreparedBy");

                    b.Navigation("Vehicle");

                    b.Navigation("VehicleInspection");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.StockTransaction", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.Part", "Part")
                        .WithMany("StockTransactions")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Core.Entities.Employee", "ProcessedBy")
                        .WithMany("ProcessedStockTransactions")
                        .HasForeignKey("ProcessedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.ServiceOrder", "ServiceOrder")
                        .WithMany()
                        .HasForeignKey("ServiceOrderId");

                    b.HasOne("GarageManagementSystem.Core.Entities.Supplier", "Supplier")
                        .WithMany("StockTransactions")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Part");

                    b.Navigation("ProcessedBy");

                    b.Navigation("ServiceOrder");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Vehicle", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.Customer", "Customer")
                        .WithMany("Vehicles")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.VehicleInspection", b =>
                {
                    b.HasOne("GarageManagementSystem.Core.Entities.Customer", "Customer")
                        .WithMany("VehicleInspections")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GarageManagementSystem.Core.Entities.Employee", "Inspector")
                        .WithMany("PerformedInspections")
                        .HasForeignKey("InspectorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GarageManagementSystem.Core.Entities.Vehicle", "Vehicle")
                        .WithMany("Inspections")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Inspector");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Customer", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("ServiceOrders");

                    b.Navigation("ServiceQuotations");

                    b.Navigation("VehicleInspections");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Employee", b =>
                {
                    b.Navigation("AssignedAppointments");

                    b.Navigation("AssignedServiceOrders");

                    b.Navigation("PerformedInspections");

                    b.Navigation("PreparedQuotations");

                    b.Navigation("ProcessedStockTransactions");

                    b.Navigation("ReceivedPayments");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Part", b =>
                {
                    b.Navigation("QuotationItems");

                    b.Navigation("ServiceOrderParts");

                    b.Navigation("StockTransactions");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Service", b =>
                {
                    b.Navigation("QuotationItems");

                    b.Navigation("RelatedInspectionIssues");

                    b.Navigation("ServiceOrderItems");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.ServiceOrder", b =>
                {
                    b.Navigation("PaymentTransactions");

                    b.Navigation("ServiceOrderItems");

                    b.Navigation("ServiceOrderParts");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.ServiceQuotation", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("ServiceOrder");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Supplier", b =>
                {
                    b.Navigation("StockTransactions");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.Vehicle", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Inspections");

                    b.Navigation("Quotations");

                    b.Navigation("ServiceOrders");
                });

            modelBuilder.Entity("GarageManagementSystem.Core.Entities.VehicleInspection", b =>
                {
                    b.Navigation("Issues");

                    b.Navigation("Photos");

                    b.Navigation("Quotation");
                });
#pragma warning restore 612, 618
        }
    }
}
